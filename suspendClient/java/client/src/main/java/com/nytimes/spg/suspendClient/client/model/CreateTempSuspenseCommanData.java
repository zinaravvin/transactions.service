/*
 * Aristo Suspense Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nytimes.spg.suspendClient.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.nytimes.spg.suspendClient.client.JSON;

/**
 * CreateTempSuspenseCommanData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-29T08:29:37.590010-04:00[America/New_York]")
public class CreateTempSuspenseCommanData {
  public static final String SERIALIZED_NAME_SUSPENSE_REASON = "suspenseReason";
  @SerializedName(SERIALIZED_NAME_SUSPENSE_REASON)
  private String suspenseReason;

  public static final String SERIALIZED_NAME_DONATION_FLAG = "donationFlag";
  @SerializedName(SERIALIZED_NAME_DONATION_FLAG)
  private String donationFlag;

  public static final String SERIALIZED_NAME_SUSPENSE_START_Date = "suspenseStartDate";
  @SerializedName(SERIALIZED_NAME_SUSPENSE_START_Date)
  private String suspenseStartDate;

  public static final String SERIALIZED_NAME_SUSPENSE_END_Date = "suspenseEndDate";
  @SerializedName(SERIALIZED_NAME_SUSPENSE_END_Date)
  private String suspenseEndDate;

  public CreateTempSuspenseCommanData() { 
  }

  public CreateTempSuspenseCommanData suspenseReason(String suspenseReason) {
    
    this.suspenseReason = suspenseReason;
    return this;
  }

   /**
   * Get suspenseReason
   * @return suspenseReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSuspenseReason() {
    return suspenseReason;
  }


  public void setSuspenseReason(String suspenseReason) {
    this.suspenseReason = suspenseReason;
  }


  public CreateTempSuspenseCommanData donationFlag(String donationFlag) {
    
    this.donationFlag = donationFlag;
    return this;
  }

   /**
   * Get donationFlag
   * @return donationFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDonationFlag() {
    return donationFlag;
  }


  public void setDonationFlag(String donationFlag) {
    this.donationFlag = donationFlag;
  }


  public CreateTempSuspenseCommanData suspenseStartDate(String suspenseStartDate) {
    
    this.suspenseStartDate = suspenseStartDate;
    return this;
  }

   /**
   * Get suspenseStartDate
   * @return suspenseStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01", value = "")

  public String getSuspenseStartDate() {
    return suspenseStartDate;
  }


  public void setSuspenseStartDate(String suspenseStartDate) {
    this.suspenseStartDate = suspenseStartDate;
  }


  public CreateTempSuspenseCommanData suspenseEndDate(String suspenseEndDate) {
    
    this.suspenseEndDate = suspenseEndDate;
    return this;
  }

   /**
   * Get suspenseEndDate
   * @return suspenseEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01", value = "")

  public String getSuspenseEndDate() {
    return suspenseEndDate;
  }


  public void setSuspenseEndDate(String suspenseEndDate) {
    this.suspenseEndDate = suspenseEndDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTempSuspenseCommanData createTempSuspenseCommanData = (CreateTempSuspenseCommanData) o;
    return Objects.equals(this.suspenseReason, createTempSuspenseCommanData.suspenseReason) &&
        Objects.equals(this.donationFlag, createTempSuspenseCommanData.donationFlag) &&
        Objects.equals(this.suspenseStartDate, createTempSuspenseCommanData.suspenseStartDate) &&
        Objects.equals(this.suspenseEndDate, createTempSuspenseCommanData.suspenseEndDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suspenseReason, donationFlag, suspenseStartDate, suspenseEndDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTempSuspenseCommanData {\n");
    sb.append("    suspenseReason: ").append(toIndentedString(suspenseReason)).append("\n");
    sb.append("    donationFlag: ").append(toIndentedString(donationFlag)).append("\n");
    sb.append("    suspenseStartDate: ").append(toIndentedString(suspenseStartDate)).append("\n");
    sb.append("    suspenseEndDate: ").append(toIndentedString(suspenseEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("suspenseReason");
    openapiFields.add("donationFlag");
    openapiFields.add("suspenseStartDate");
    openapiFields.add("suspenseEndDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateTempSuspenseCommanData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CreateTempSuspenseCommanData.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateTempSuspenseCommanData is not found in the empty JSON string", CreateTempSuspenseCommanData.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CreateTempSuspenseCommanData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateTempSuspenseCommanData` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("suspenseReason") != null && !jsonObj.get("suspenseReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspenseReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspenseReason").toString()));
      }
      if (jsonObj.get("donationFlag") != null && !jsonObj.get("donationFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `donationFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("donationFlag").toString()));
      }
      if (jsonObj.get("suspenseStartDate") != null && !jsonObj.get("suspenseStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspenseStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspenseStartDate").toString()));
      }
      if (jsonObj.get("suspenseEndDate") != null && !jsonObj.get("suspenseEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspenseEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspenseEndDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateTempSuspenseCommanData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateTempSuspenseCommanData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateTempSuspenseCommanData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateTempSuspenseCommanData.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateTempSuspenseCommanData>() {
           @Override
           public void write(JsonWriter out, CreateTempSuspenseCommanData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateTempSuspenseCommanData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateTempSuspenseCommanData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateTempSuspenseCommanData
  * @throws IOException if the JSON string is invalid with respect to CreateTempSuspenseCommanData
  */
  public static CreateTempSuspenseCommanData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateTempSuspenseCommanData.class);
  }

 /**
  * Convert an instance of CreateTempSuspenseCommanData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

