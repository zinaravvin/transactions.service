package com.hdwbrout.hdwebupa;

import java.net.MalformedURLException;
import java.net.URL;
import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.3
 * 2022-07-28T15:47:36.256-04:00
 * Generated source version: 3.4.3
 *
 */
@WebServiceClient(name = "HDWEBUPAService",
                  wsdlLocation = "file:/Users/202824/workspaces/transactions/src/main/resources/wsdl/HDWBROUT.xml",
                  targetNamespace = "http://www.HDWEBUPA.HDWBROUT.com")
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00", comments = "Apache CXF 3.4.3")
public class HDWEBUPAService extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public final static QName SERVICE = new QName("http://www.HDWEBUPA.HDWBROUT.com", "HDWEBUPAService");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public final static QName HDWEBUPAPort = new QName("http://www.HDWEBUPA.HDWBROUT.com", "HDWEBUPAPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/202824/workspaces/transactions/src/main/resources/wsdl/HDWBROUT.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HDWEBUPAService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/202824/workspaces/transactions/src/main/resources/wsdl/HDWBROUT.xml");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService() {
        super(WSDL_LOCATION, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns HDWEBUPAPort
     */
    @WebEndpoint(name = "HDWEBUPAPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAPort getHDWEBUPAPort() {
        return super.getPort(HDWEBUPAPort, HDWEBUPAPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HDWEBUPAPort
     */
    @WebEndpoint(name = "HDWEBUPAPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-07-28T15:47:36.256-04:00")
    public HDWEBUPAPort getHDWEBUPAPort(WebServiceFeature... features) {
        return super.getPort(HDWEBUPAPort, HDWEBUPAPort.class, features);
    }

}
